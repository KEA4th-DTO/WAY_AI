Page 2:
프론트엔드 공부를 시작하며 블로그도 작성하게 되었다.
블로그를 작성하며 수업내용을 복습하고, 정리한 내용이 나중에 참고가 되길 바라며 시작!

 
 
 
 
 

Page 4:
⭑HTML : (Hypertext Markup Language) 웹에서 자유롭게 오갈 수 있는 웹 문서를 만드는 언어
 
⭑HTML5 : 구조, 뼈대
⭑CSS3 : 디자인, 표현
 
⭑웹표준 : 웹 기술의 공식적인 표준, 어느 웹 브라우저나 동일하게 적용, HTML5
 
⭑웹접근성 : 누구든지 원활하게 웹 페이지를 이용하는 것 ex)시각장애인을 위한 음성지원 등
 
⭑서버(server): 클라이언트 요청을 받으면 데이터나 서비스를 제공하는 컴퓨터 프로그램,
요청을 받으면 데이터를 보내주는 기계
 
⭑클라이언트(client): 서버를 네트워크를 통해 사용하는 컴퓨터, 서버를 이용하는 사용자(컴퓨터)
 
⭑마크업 :  태그를 사용해 표시하는 것 ex)<>
 
⭑웹 편집기 : 노트패드++, 에디트플러스, 코다, 텍스트 메이트(잘 사용X), 드림위버(잘 사용X), 비주얼 스튜디오 코드 등..
⭑젠코딩=emmet (빠르게 코딩 태그 쳐지는거) vs코드는 알아서 됨 , 다른프로그램은 깔아야할 수도

⭑주석처리 :
 /*css주석내용*/ <!--html주석내용-->
 
⭑파일명: 한글x, 띄어쓰기x, 띄어쓰기 대신 _ , -이거 사용, 영문숫자o
 
⭑특수문자: 변환해서 사용

​[HTML]
 
​⭑tag=요소 element
-대소문자 구별x, 보통 소문자 사용, <>로 표시
ex)<p></p>
 
​⭑속성="값" (attribute="value")
-쌍따옴포""나 외따옴표'' 둘 다 사용 가능 
ex) <img src="img.jpg" alt="시계이미지"
 
⭑head: 문서의 기본적인 정보 적기
 
⭑title: 문서의 제목
⭑body: 페이지 구성부분, 실제 브라우저 표시될 내용
⭑footer: 웹페이지 하단 영역
- 저자(author) 정보
- 저작권 정보
- 주소, 연락처
- 사이트맵(sitemap)
- 페이지 맨 위로 되돌아갈 수 있는 Top 버튼
- 연관 페이지, 회사정책, 고객센터 정보
 
 

⭑<!DOCTYPE html>: html5 사용선언
 
⭑<html lang='ko'>: 사용할 언어 지정
-en영어, ko한국어, ja일본어, zh중국어, de독일어, fr프랑스어
 

⭑<meta>:데이터 기본적인걸 설명해주는 것, utf-8문자세트 사용
-<meta charset='utf-8'> :꼭 쓰기, 안 쓰면 한글 엑박뜸, (charset:글자 , utf-8:다국어가 지원된다.)
 

⭑<meta http-equiv="X-UA-Compatible" content="IE=edge">
:익스플로러 사용자까지 고려하는 웹 제작할 경우 사용, 익스플로러의 가장 최근의 엣지로 나타난다는 뜻


⭑<meta name="viewport" content="width=device-width, initial-scale=1.0">
:화면, 디바이스에 맞춰서 화면이 가득찬다는 뜻 (모바일 기기 등 고려한 것)
-meta name="viewport :화면, 디바이스에 맞춰서 화면 참
-content="width=device-width :디바이스에 따라 나타남
-initial-scale=1.0 : 축소나 확대가 아닌 기본1로 화면 나타남

 
⭑html 공백: 띄어쓰기 하면 한 칸만 인식됨, 엔터하면 띄어쓰기 한 칸 인식
-여러개 공백: 특수기호로 사용
-<>태그말고 그냥 < 특수문자로 나타내고 싶을때는 다른 표기법으로 사용
 
-엔티티 기호(엔티티 이름): 특수문자를 코드로 나타냄
https://entitycode.com/
https://www.toptal.com/designers/htmlarrows/arrows/
https://dev.w3.org/html5/html-author/charref
 
⭑<pre></pre>: 공백 그대로 나타내는태그, 이 태그 안에서 띄어쓰기하면 그대로 다 나타남, but 음성지원에서 읽어주지 않기 때문에 장애인들이 이용하기엔 불편, 웹 접근성이 떨어져서 잘 쓰진 않음.
 
#박스모델
*display:block;
           inline;
-기본 값은 정해져 있지만 바꿔서 설정가능
*블록: 넓이와 높이 쓸 수 있음, 왼쪽부터 오른쪽까지 전체 공간이용 *인라인: 넓이와 높이가 안 먹기때문에, 블록이나 인라인블록으로 속성을 바꿔야됨, 콘텐츠 크기만큼만 자리차지
 

 
#텍스트를 블록으로 묶어주는 태그
⭑<hn></hn>: heading 제목 태그
-<h1>~<h6>까지 표현, 1이 제일 중요
-사이트 왼쪽 로고 같은 경우 대부분 h1 사용
-태그 안에 <p>쓰는 것 x, 문단태그 들어가면 문법적 오류
 
⭑<p></p>: paragraph 텍스트 단락 
 
⭑<br>: 줄바꿈, 단독태그 (잘 사용x)
 
⭑<hr>: 수평 줄 표시, 단독태그 (잘 사용x)
 
⭑<blockquote></blockquote>: 인용문
-안으로 들여 써짐
 
⭑<pre></pre>: (잘 사용x)
 

 
#텍스트를 한 줄로 표시하는 태그 (인라인)
⭑굵게 표시
-<b></b>: 의미가 없고 물리적으로 그냥 굵게 표현 -<strong></strong>: 의미 강조가 됨, 낭독번역기 사용시 다르게 읽어줌
 
⭑이탤릭체로 기울게 표시
-<i></i>:단순 이탤릭체로 표시-<em></em>:중요하게 의미 강조하며 이탤릭체 표시
 
⭑<q></q>: quote. 인용 내용 표시-<blockquote>은 block이지만 q는 inline이기 때문에 함께 한 줄로 표시, 줄바꿈x, 안 들여써짐,  알아서 인용 내용에 ""따옴표 붙여짐-ex) <q cite="http://www.naver.com/aa">웹의 힘은 보편성에 있다.</p>
 
⭑<mark></mark>: 형광펜 효과
 
⭑<span></span>: 특정 영역 묶을 때 사용
 
⭑<ruby></ruby>: 동아사아 글자 표시, 주석을 함께 표기하기 위해 사용. 다른 나라 작업할 땐 사용, 잘 사용x,
-주석으로 표시할 내용을 안에 <rt></rt>태그로 표시(주석은 ruby글자 위에 작게 표현됨)
-ex)<ruby>내용<rt>주석</rt></ruby>
 
(기타 텍스트 관련 인라인 태그들)
⭑<abbr></abbr>: 약자 표시, title 속성을 함께 사용 가능
-ex)<abbr title="internet of Things">IOT</abbr>
 
⭑<cite></cite>: 웹 문서나 포스트에서 참고 내용 표시
-ex)<p>내가 경험한 누군가를 만나는 ....-영화, <cite>비포선셋</cite>중</p>
 
⭑<code></code>: 컴퓨터 인식을 위한 소스코드
-ex)<pre><code>function savetheLocal{...}</code></pre>
 
⭑<kbd></kbd>: 키보드 입력이나 음성 명령같은 사용자 입력 내용
-ex)<kbd>F5</kbd>키를 ..
 
⭑<small></small>: 부가정보를 작게 표시해도 되는 텍스트 (부가세 별도)..이런 거
 
⭑<sub></sub>: 아래 첨자
-ex) H2에서 2를 아래에 표현
 
⭑<sup></sup>: 위 첨자(2승 이런거)
 
⭑<s></s>: 취소선
 
⭑<u></u>: 밑줄
 

 
#목록 태그
⭑<ul></ul>: 순서x , 자식태그 <li></li>만 와야됨 ⭑<ol></ol>: 순서o, li만 와야됨 ⭑<dl></dl>: 설명목록     ex) <dl>            <dt>제목</dt>            <dd>설명</dd>         </dl>
-dl dt dd는 제목설명목록 -dl자식으로 dt와 dd -dt와 dd는 부모자식x , 형제관계o
 
 
#링크 이동
⭑절대경로: ex)<a href=''http://www.kfdkfjkdf.com"></a> 
 - '/' 기준 -> '/' 는 웹사이트의 루트 폴더(최상위) >ex: /01.html
⭑상대경로: 현재문서 기준으로 연결할 문서나 이미지의 위치 지정, ex)dd.html-같은위치: 같은 디렉토리 상에 위치(같은 폴더에 위치) -위에 위치: ../파일명.확장자 -아래위치: 폴더명/파일명.확장자 >ex: file/03.html -현재디렉토리:  ./ (맨앞에서 생략가능)> ex: ./01.html = 01.html ⭑다른 사이트 특정 페이지의 특정 위치id로 이동할 때 ex:<a href="이동할 페이지의 주소(URL)#jangmi">장미 구경하세요</a>
 
 
⭑이미지
<img src="https://t1.daum.net/bknbkfji.png" alt="다음"> -alt: 웹 접근성때문에 필수로 적기! -alt='' →빈알트 라고 하는데 그냥 줄처럼 아무 의미없이 꾸민 거에만 사용가능, 아니면 로고+네이버 이런식으로 써있는거에 이미 내용이 있기때문에 두번 중복 내용 안 되게 건너 띄도록 사용가능. -배너광고에 alt='광고' 이렇게 대충말고 배너 이미지면 문구까지 다 적어주기
 
⭑이미지와 설명태그

<figure>
            <img src="https://nssejreifji.com/ccc.png" alt="이미지">
            <figcaption>위사진은다음이미지설명</figcaption> 
</figure>
-<figure>: 삽화나 다이어그램, 사진 등을 담는 컨테이너 역할 (문서의 주요 흐름과는 독립적인 콘텐츠를 정의할 때 사용)
-<figcaption>: 설명하는 문구 / figure 안에 위치

 

 
*wrapper 래퍼 : 전체 싸주는 묶음, div class로 많이 사용
 
 

Page 5:
*우선순위 1. 위에서부터 아래로 훑고 내려오기 때문에 아래가 중요하다.2. 경로가 있는 것이 경로가 없는 것보다 우선 순위가 높다. (ex:h1안에 span.. 다 써주기)3. 인라인>내부스타일>외부스타일 (인라인이 최고 높음) 4. 아이디>클래스>태그 (아이디가 최고 높음) (ex: #1 >.2 >h1 //순서가바뀌어도 아이디가 높음)
 

#font 스타일
*font-family: 글꼴 지정
-font-family:<굴림>[,<돋움>, <궁서>]
→[,]은 옵션인데 대괄호안에 있는 항목은 사용할 수도 있고, 사용하지 않을 수도 있음
-ex) p{font-family:굴림;}
-p{font-family:"맑은 고딕", 돋움, 굴림}
→""두 단어 이상으로 된 글꼴 이름이면 따옴표로 묶어 표시.
 
 
*font-size : 글자 크기-글꼴 크기 안정하면 기본 16px임. -em, rem,%, vh, vw, ex, px, pt
-모바일 기기 사용고려하면 px보다 em단위 사용
-em:해당 글꼴의 대문자 M너비 기준으로 크기 조절/지정한 크기가 없다면 body요소의 크기 16px이 기본값1em으로 지정
-px을 em단위로 변환할 때 http://pxtoem.com/ 사이트 참고*font-weight : normal 400 인데 폰트마다 달라서 다를수있음.
-normal, bold, lighter, bolder, 100~900사이의 수치(700은 bold)
 
*font-variant : 작은 대문자로 표시
-소문자 크기에 맞춰서 작게 대문자로 표시됨.
-normal, small-caps
 
*font-style: 글씨 스타일
ex) <style>.txt3{font-style:italic;}</style> = html에서 <i></i> 
 
#텍스트 스타일
*color: 글자 색-blue 이런거처럼 색상명으로만하면 각 기기마다 색이 다르게 나올수있어 정확하지x,   색상값인 rgb나 16진수로 대부분 사용 -ex:{color:rgba(82,166,0,.5);}  >>0.5=.5 로 사용가능-hsl(0,100%,80%) 이런것도 사용가능하긴한데 rbg,16진수를 많이 사용 h:색상, s:채도, l:명도
 
*text-decoration: 밑줄
-none, underline, overline(영역 위로 선), line-through(취소선,가끔사용)
 
*text-transform: 텍스트 대소문자 변환
-none
-capitalize: 시작하는 첫번째 글자를 대문자로 변환
-uppercase: 모든 글자를 대문자로 변환
-lowercase: 모든 글자를 소문자로 변환
-full-width: 가능한 모든 문자를 전각 문자로 변환
 
*text-shadow: 그림자 효과
-none
-x축 y축 번짐 color 순으로 작성
ex) text-shadow:-3px 3px 2px black; →왼쪽3px에 아래3px로 2px번진 검정 그림자
 
*letter-spacing: 글자 간격 조절
-normal
-숫자 ex) letter-spacing:0.2em​; 
-자간은 가능하면 em단위로 지정해야 좋음, 바뀌는 글꼴에 맞추어 자간이 유지되기 때문
 
*word-spacing: 단어와 단어 사이 간격 조절 (잘 사용X)
*word-break: 글자 단어별로 끊기 - word-break:keep-all;  →​단어별로 끊어짐 /단어별 영문 기본값 - word-break:break-all;  →​철자별로 끊어짐 /철자별 한글 기본값
 
*white-space: 공백 처리하기
-공백을 하나의 원칙으로 처리해 깔끔하게 할 때 사용
-normal(여러 개 공백을 하나로 표시, 기본값)
-nowrap(여러 개 공백을 하나로 표시하고, 영역너비 넘어가는 내용은 줄 안 바꾸고 계속 한 줄로 표시)
-pre(여러 개 공백을 그대로 표시, 영역너비 넘어가면 줄 안 바꾸고 계속 한줄로 표시)
-pre-line(여러개 공백을 하나로 표시하고, 영역 너비 넘어가는 내용은 자동으로 줄 바꿔 표시)
-pre-wrap(여러개 공백을 그대로 표시, 영역너비 넘어가는 내용은 자동으로 줄 바꿔 표시)
 
#문단 스타일*direction: 글자쓰기 방향 지정-아랍어 처럼 오른쪽에서 왼쪽으로 쓰는 언어에 사용
-ltr 왼쪽에서 오른쪽으로(left-to-right) 텍스트 표시
-rtl 오른쪽에서 왼쪽으로
 
*text-align: 텍스트 정렬
-start: 현재 텍스트 줄의 시작 위치에 맞춤
-end: 현재 텍스트 줄의 끝 위치에 맞춤
-left: 왼쪽에 맞추어 문단 정렬
-right: 오른쪽
-center: 가운데
-justify: 양쪽에 맞춤
-match-parent: 부모 요소를 따라 정렬
 
*text-justify: 정렬 시 공백 조절
-간격을 어떻게 조절해 정렬할 건지 지정, text-align:justify일 경우 양쪽에 맞추면 글자와 단어 사이 간격이 어색하게 벌어질 수 있어서 이때 사용
-auto, none, inter-word(단어 사이 공백을 조절해 정렬), distribute(인접한 글자 사이의 공백을 똑같이 맞춰 정렬)
 
*text-indent: 텍스트 들여 쓰기
-px, %(부모요소를 따름)
 
*앞에 들여쓰기효과 padding-left:50px;  /*text-indent:50px;이거 줘도 상관없고 위에 padding-left도 상관없음, 패딩이 더 많이 사용하긴 함*/
 
*line-height: 줄간격 조절
-normal, px, 숫자(배), %, inherit(부모요소를 따름)
-normal:기본 120%(1.2배)
-0.7(글자크기의 0.7배의 줄간격)
-font에 한꺼번에 묶어 표현할때 font-size/line-height /로 함께 연결해 표현가능ex) p{font:italic 16px/20px 돋움} →16px사이즈에 line-height는 20px
-본문 사용에 1.5를 많이 사용
-높이 50px영역가운데로 글씨맞출때 line-height:50px ;/*많이쓰임*/
 
*text-overflow: 영역을 넘치는 텍스트를 어떻게 처리할지 지정
-해당 요소에서 overflow속성값이 hidden이거나 scroll, auto이면서 width-space:nowrap을 함께 사용했을 경우에만 적용됨.
-clip(넘치는 텍스트를 자름), ellipsis(말 줄임표...로 잘린 텍스트가 있다고 표시)
-hover되면 말줄임표했던거를 보여주게 한다던가 할때 사용
 
 
#목록 스타일
*bullet 블릿 :li 앞에 점 모양있는거 -기본적으로 앞에 패딩이 있음
>패딩 간격좁히고 싶을때: .list3{padding:0;} x >>이렇게하면 점모양이 아예사라짐 .list3{padding:10;} o>>이런식으로 기본패딩보다 숫자 낮추면 됨. -사실 블릿은 잘 안쓰고 before나 after로 많이 사용함 
 
*기본 dl의 dd앞에 마진있는거 없앨때: .list4 dd{margin-left: 0; }
​

Page 6:
*블록: 한 줄 차지하는 요소
*인라인: 줄을 차지 하지 않는 요소, 콘텐츠만큼만 영역 차지, 여러개 인라인이 한줄에 표시됨
 
*block 태그
<p> ,<h1><h6>, <ul>, <ol>, <div>, <blockquote>, <form>, <hr>, <table>, <fieldset>, <address>
 
*inline 태그
 <img>, <object>, <br>, <sub>, <sup>, <span>, <input>, <textarea>, <label>, <button>, <a> 
 
*실제 콘텐츠 영역, 패딩padding, 박스의 테두리border, 여러 박스 모델 사이의 여백인 마진margin 등의 요소로 구성
 
*padding: 여백, 선의 안
 
*margin: 여백, 선의 밖
-margin:auto →마진을 좌, 우 똑같이 줌(여백있을시 적용), 상하는 적용x(body 높이가 디바이스 보이는 만큼 정해진게 아니고 콘텐츠 높이만큼에 따라 달라지기 때문에 안 정해졌음)
 
*display: 화면 배치 방법 정하기
-none, contents, block, inline, inline-block(내용은 블록이면서 한줄로 배치할때), inherit(상위요소 속성 상속받기), table(블록레벨의 표), table-cell(표에서 하나의 셀로 만들기) 등
 
*width: 넓이
-width가 없는 상태:auto -100%하고 auto는 다름 -100%: 전체넓이 100%+여백=밀릴수있음. -auto는 여백을 뺀 나머지로 가득차게함
 
*height: 높이
 

Page 7:
*이미지는 인라인 요소이지만 예외로 넓이와 높이가 적용됨
 
*이미지 가운데배치 방법1. 부모 블럭요소에 text-align:center 하기
-이미지 위의 부모요소인 div 블럭에 text-align:center하면 가운데로 이미지 배치됨.
이미지에는 안됨 (이미지에 width가 없고 그냥 가운데 대충놓을 경우 사용)
2. width주고 margin:auto로 좌우여백주기
-부모 블럭에 width 설정 → 이미지에 width:100%(똑같은 px도 상관없음)주기 → 부모 블럭에 margin:auto
 
1보다는 2방법이 편한듯
 

*많은 그림 있는 이미지 한개에서 포지션으로 해당 보이는 영역 조정(많이 쓰이는 방법)-3개 세로로 붙어있는 이미지 높이가 150px일때 (150/3=50이니까 하나당 px로 조정) background:url(down/image/list_bg.gif) no-repeat;} .menu2>li.second{background-position:left top -50px;}  .menu2>li.last2{border-bottom:none; background-position:left top -100px;}

Page 8:
태그 호출할때 사용됨
 
class
*class
-여러개 사용 가능
- .class이름 으로 사용
 
*class 여러개 쓰고 싶을때는 한칸 띄기 ex)<h2 class="subtitle subtitle2">
 
*h2에 붙은 클래스title3의 태그를 쓸때
ex) h2.title3{color:red;}
 
*복수 선택할때(ctrl+shift처럼) ex) .list1, .list1, .list3{}
 
*.subtitle이면서. subtitle.2인 애를 태그하고 싶을때는 안띄고 ex) .subtitle.subtitle.2
 

id
 
*id
-하나만 사용 가능
-#아이디명 으로 사용

Page 9:
*h2에 붙은 클래스title3의 태그를 쓸때
ex) h2.title3{color:red;}
 
*복수 선택할때(ctrl+shift처럼)ex) .list1, .list1, .list3{}
 
*.subtitle이면서. subtitle.2인 애를 태그하고 싶을때는 안띄고ex) .subtitle.subtitle.2
 
*하위요소 : 밑에 있는거 전부  ex).list2 li span
*자식요소: 바로 밑에 자식 ex)list2>li>span일 경우에 .list2>span 불가능 /.list2>li 가능

Page 10:
*배경 -border부터 배경이 깔림, 포함된 영역이기때문(만약 도트선이면 아래에도 색칠해져있음) -margin은 안깔림, padding은 깔림
 
*background-color: 배경색 지정
-16진수#000..., rgb(0,255,0), rgba, 색상이름
 
*백그라운드로 이미지깔고 조정하기background-image:url(down/image/ball.png); -이미지깔리는게 패딩부터 디폴트
-괄호안에 'img.png'이렇게 따옴표 붙여도 되고 안 붙여도 됨*background-repeat 배경이미지 반복 조정
-repeat; repeat-x(가로), repeat-y(세로), no-repeat 로 조정*배경어디부터 깔지 정하기background-clip:padding-box;/*선포함x 그 안에 패딩부터 배경깔림*/ background-clip:border-box;/*선포함부터 배경깔림*/ background-clip:content-box;/*콘텐츠부터 배경깔림*/ *배경이미지 배치할 때 기준 background-origin: content-box;                            border-box;                            padding-box; *배경이미지 위치 조절하기 background-position
-수평위치, 수직위치
-수평위치 표현할때: left, center, right, %, px
-수직위치 표현할때:top, center, bottom,%, pxex)background-position:right 10px left 20px; >>오른쪽에서 10px 떨어지고 left에서 20px떨어지란뜻 ex)background-position:10px 20px; >좌우10px, 상하 20px 떨어지란뜻 *배경이미지 크기 조절 background-size:auto contain (요소 영역안에 배경이미지가 다 채워짐) cover(이미지가 요소 영역을 덮게 함/이미지가 영역 넘어가면 짤림) 크기값 백분율 *배경이미지 고정하기 배경 이미지 넣고>background-attachment:fixed;
-scroll:기본값, 화면스크롤과 함께 배경이미지도 스크롤*배경이미지 축약
-축약순서: color image repeat positon / size attachmentex)background: url(down/image/ball.png) no-repeat right bottom /cover; >>축약할때는 순서를 준수해야 적용됨
-축약할때 position(cover), size는 밑에처럼 /붙여야 적용됨
ex)background:url(d.img) no-repeat center /cover;  >o ex)background:url(d.img) no-repeat center / 50px;  >o 
 
*배경이미지 여러개 중첩 사용
div{background-image:url(img/image1.png), url(img/image2.png);

background-size:200px 100px, 500px 100px;

background-position:100px 10px ,0 0;

background-repeat:no-repeat;}
1. background-image 뒤에 적용할 url 주소를 ,로 구분하여 넣고자 하는 만큼 입력
2. background-size : ,로 구분 각 이미지의 크기를 조절
3. background-position :  (왼쪽 위 기준) ,로 구분하여 각 이미지의 위치를 조절
(이미지가 겹칠경우엔 왼쪽 파일이 앞쪽에 적용)
 
 
*배경 그라디언트와 이미지 같이 사용
 
div{background : linear-gradient(to right, rgba(0, 0, 0, .6), rgba(255, 255, 255, .6)), url(img/image.jpg);}
 
*배경 이미지와 컬러 같이 사용
div{background :url(img/image.jpg)no-repeat top center #cccccc;}
 
*배경 이미지와 컬러 혼합
div{background : url(image.jpg)no-repeat top center;
 background-color: aliceblue;
background-blend-mode: multiply;}
 

Page 12:
*기본 구성
<table> →표 전체 묶음 <tr> ....행   <th>제목</th>   <td>데이터</td>  </tr> </table>
 
*분류 구성
-<thead></thead> >>순번, 제목,작성자, 작성일 등 제목 -<tbody></tbody>  >>헤드(제목 작성자 이런거)뺀 내용 즉 데이터, 생략해도됨 어차피 티헤드랑 티풋이 없으면 구분할 필요가 없으니까. -<tfoot></tfoot> >>티헤드나 티풋이 없는 표도 있고 순서가 바뀐 표도 있음, 필수는 아님. (구분할때 사용)
 
*행이나 열의 어디에 해당하는지 구분하기
ex)<th scope="col"></th> →열(세로)
   <th scope="row"></th> →행(가로)
>>웹 접근성을 위해 사용
 
*행, 열 합치는 방법
ex)<td colspan="2"></td>  →열2개를 합쳐서 행1개로 만든다. 
    <td rowspan="3"></td> →행3개를 합쳐서 열1개로 만든다.
 
*colgroup으로 특정 col에 스타일 적용시키기
<colgroup><!--col은상하(열) col 적힌 태그순서로 1열 2열 3열...적용됨-->
    <col span="2" style="background-color: #ccc; width:100px;">  <!-- span은 다음꺼랑 칸합쳐진거 까지 적용 -->
    <col>
    <col style="background-color:yellow; width:200px;">
</colgroup>
 
 
*이중선 안되게 표의 선 정리하기
-table 에 css로 border-collapse:collapse; 속성
>table 안에 th랑 td각 border를 주고 table에 또 border주면 이중으로 선이 생기니까 하나로 보이게 하고 싶을 때 사용, 안하면 칸마다 줄이 끊어지는 현상도 발생/ 기본적으로 많이 사용
 
*참고
-표는 보기엔 정리가 잘되어있는데 음성지원으로는 안돼서 접근성이 떨어짐  <caption>표연습</caption> →어떤 건지 캡션 달아서 음성지원되게 하면 좋은데, 안 보이게 하고 싶으면 나중에 따로 처리해야됨(ex:작성자,제목~~로 구성) -table안에 캡션있어도 table에 border주면 caption은 안먹히고 표에만 선 생김
 
 

*적용 예시
 
<table class="coffee">
        <caption>테이크아웃커피 비교대상제품</caption>
        <colgroup><!--col은상하(열)ㅣㅣㅣ이순서대로col적힌태그순서로1열2열3열...적용됨-->
            <col span="2" style="background-color: #ccc; width:100px;"><!-- span은 다음꺼랑 칸합쳐진거 적용 -->
            <col>
            <col style="background-color:yellow; width:200px;">
            <col>
            <col>
            <col>
        </colgroup>
        <thead>
            <tr>
                <!-- <th>분류</th> -->
                <th scope="col" colspan="2">분류</th>
                <th scope="col" >브랜드명</th>
                <th scope="col" >기본사이즈</th>
                <th scope="col" >제품명</th>
                <th scope="col" >가격(원)</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope="row" rowspan="2">해외커피브랜드</td>
                <th scope="row">미국</td>
                <td>스타벅스커피</td>
                <td>Tall</td>
                <td>카페아메리카노</td>
                <td>3,900</td>
            </tr>
            <tr>
                <!-- <td></td> -->
                <th scope="row">이탈리아</td>
                <td>커피빈</td>
                <td>small</td>
                <td>아메리카노</td>
                <td>4300</td>
            </tr>
            <tr>
                <th scope="row" colspan="2" rowspan="4">국내커피브랜드</td>
                <!-- <td></td> -->
                <td>엔제리너스 커피</td>
                <td>small</td>
                <td>아메리카노</td>
                <td>3500</td>
            </tr>
            <tr>
                <!-- <td colspan="2"></td> -->
                <!-- <td></td> -->
                <td>이디야커피</td>
                <td>onesize</td>
                <td>아메리카노</td>
                <td>2500</td>
            </tr>
            <tr>
                <!-- <td colspan="2"></td> -->
                <!-- <td></td> -->
                <td>카페베네</td>
                <td>regular</td>
                <td>아메리카노</td>
                <td>3800~4500</td>
            </tr>
            <tr>
                <!-- <td colspan="2"></td> -->
                <!-- <td></td> -->
                <td>탐앤탐스커피</td>
                <td>tall</td>
                <td>아메리카노</td>
                <td>5000</td>
            </tr>
        </tbody>  
    </table>

테이크아웃커피 비교대상제품











분류
브랜드명
기본사이즈
제품명
가격(원)




해외커피브랜드
미국
스타벅스커피
Tall
카페아메리카노
3,900



이탈리아
커피빈
small
아메리카노
4300


국내커피브랜드

엔제리너스 커피
small
아메리카노
3500




이디야커피
onesize
아메리카노
2500




카페베네
regular
아메리카노
3800~4500




탐앤탐스커피
tall
아메리카노
5000



 

Page 13:
*첫번째 자식, 마지막 자식 호출-대상요소:last-child -대상요소:first-child
 
*부모의 몇번째 자식 호출
-대상요소:nth-child(n)
 
*부모의 특정한 요소 중 몇번째 자식 호출
-대상요소:nth-of-type(3)


<dl>
  <dt></dt><!-- dt:nth-child(1) -->
  <dd></dd><!-- dd:nth-child(2) >>dd기준말고 dl의 자식기준으로 2번째 -->
  <dd></dd><!-- dd:nth-child(3) -->
  <dd></dd><!-- dd:nth-of-type(3) -->
  <dt></dt><!-- dt:nth-of-type(2) -->
</dl>

 
 
*홀수, 짝수의 배수 호출
nth-child(3n) >3의 배수 (3,6,9..)  nth-child(3n-1)? >3x0-1=0 3x1-1=2 이런식으로 짝수의 배수
 
 
*참고
ex: /* 몇번째자식호출할때 ,근데 사실 확장성때문에 child보다 클래스 쓰는게 대부분이라곤 함(순서바뀌거나 수정할때 힘드니까)*/ /* .free-bbs th.last{border-right:none;} */ .free-bbs th:last-child{border-right:none;}


Page 15:
1뎁스와 2뎁스
1depth: 처음 보이는 메뉴 (상위)
2depth: 메뉴 안의 또 다른 메뉴 (하위)
 
 
*전체적인 구성
ul(전체 메뉴 묶음)>li(1뎁스)>a(1뎁스 메뉴명)
                                    >ul(2뎁스 메뉴)>li>a 
-position:relative(1뎁스) 와 absolute(2뎁스)로 top 위치를 조정해 아래에 배치
 
 
1)1뎁스 아래에 부분 2뎁스 구성 
1 CODE
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
    	/*reset*/
        *{margin: 0;padding: 0}
        ul,ol{list-style: none;}
        a{text-decoration: none;color:inherit}
        h1,h2,h3,h4,h5,h6{font-weight: normal;font-size: 100%;}
        body{line-height: 1;}
        .cf::after{content: '';width: 0;height: 0;font-size: 0;display: block;clear: both;}
        .blind{display: none}
        fieldset{border: none}
        button{
            background-color:transparent;
            border:none;}
        img,input,button{vertical-align: middle;}/*인라인한줄수평중앙배치*/
        
        .gnb{width: 800px; margin:auto;/*background:#ccc;*/}
        .main-banner{height:550px; background:yellowgreen;}
        .main-banner h1{font-size: 50px; font-weight: bold; text-align:center;}
        .depth1{float:left; width:200px;position:relative;/*! 1.상위1뎁스 li를 기준점!*/}
        .depth1>a{display: block;height:70px;line-height: 70px; text-align: center; font-size: 20px; font-weight: bold;}
        .depth1:hover>.depth2{display:block; /* inline, table,flex...*/}
        .depth1:hover>a{color:#d68}/*전체블록에 올라갔을때 바뀌려면 이렇게, a호버때 바꾸려면 a에 스타일넣기*/
        .depth2{position:absolute;/*! 2.뎁스 따라가게 설정*/ top:70px;/*65도상관x,스타일에 맞게*/ left:0;
        background:#fff;border-top: 2px solid #000;width:200px;/*!width지정하려면 꼭주기 ,안주면 포지면앱솔루트돼서 넓이사라짐(포지션주면 콘텐츠맞게되기때문)*/
        display:none;/*! 3. 안보이게 설정(호버됐을때 보이게) */}
        .depth2 a{display:block; height:50px; line-height:50px; font-size:17px; color:#666; text-align:center;}
        .depth2 a:hover{color: red; text-decoration:underline; background:rgba(0,0,0,15);}/*a가 li랑 똑같은 크기여서 a에 줌, li에 줘도 됨*/
    </style>
</head>
<body>
    <div class="header">
        <ul class="gnb cf"><!--1뎁스-->
            <li class="depth1">
                <a href="#">회사소개</a>
                <ul class="depth2">
                    <li><a href="#">회사개요</a></li>
                    <li><a href="#">ceo인사말</a></li>
                    <li><a href="#">회사연혁</a></li>
                    <li><a href="#">특허인증현황</a></li>
                    <li><a href="#">찾아오시는 길</a></li>
                </ul>
            </li>
            <li class="depth1">
                <a href="#">제품소개</a>
                <ul class="depth2">
                    <li><a href="#">신제품</a></li>
                    <li><a href="#">선풍기</a></li>
                    <li><a href="#">여름가전</a></li>
                    <li><a href="#">겨울가전</a></li>
                    <li><a href="#">주방가전</a></li>
                    <li><a href="#">생활가전</a></li>
                    <li><a href="#">환경가전</a></li>
                </ul>
            </li>
            <li class="depth1">
                <a href="#">홍보센터</a>
                <ul class="depth2">
                    <li><a href="#">공지사항</a></li>
                    <li><a href="#">언론보도</a></li>
                    <li><a href="#">카탈로그</a></li>
                    <li><a href="#">홍보활동</a></li>
                </ul>
            </li>
            <li class="depth1">
                <a href="#">고객지원</a>
                <ul class="depth2">
                    <li><a href="#">자주묻는질문</a></li>
                    <li><a href="#">온라인문의</a></li>
                    <li><a href="#">서비스센터</a></li>
                    <li><a href="#">제품설명서</a></li>
                </ul>
            </li>
        </ul>
    </div>
    <div class="main-banner">
        <h1>메인이미지</h1>
    </div>
</body>
</html>
 
1 실행화면


 
 
2)1뎁스 아래에 전체 2뎁스 구성
*position:relative를 전체를 구성하는 gnb아래에 배치
2 CODE
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
    <link rel="stylesheet" href="down/css/reset.css">
    <style>
        .gnb{width: 1400px; margin:30px auto; height: 50px;position: relative;/*gnb기준으로 아래배치할거니까*/}
        .gnb .depth1{width: 200px; float: left; text-align:center;}
        .gnb .depth1>a{display: block;height: 50px; line-height: 50px; background:#202020; font-size: 20px; font-weight: bold;color:#fff;}
        .gnb .depth1:hover>.depth2{display: block;}
        .gnb .depth1:hover>a{background: orange;}


        /*gnb에 맞게 아래에 depth2 100%*/
        .gnb .depth2{position: absolute; left: 0;top:50px;width: 1400px; background:#d0d0d0;
        display: none;}
        .gnb .depth2>li{float: left;}
        .gnb .depth2>li>a{display:block;height: 150px; height: 40px;line-height: 40px;font-size: 17px;width: 150px;}
        .gnb .depth2>li>a:hover{background:#444;color:#fff;}

    </style>
</head>
<body>
    <ul class="gnb cf">
        <li class="depth1">
            <a href="#">HOME</a>
            <ul class="depth2">
                <li><a href="#">HOME01</a></li>
                <li><a href="#">HOME02</a></li>
                <li><a href="#">HOME03</a></li>
                <li><a href="#">HOME04</a></li>
                <li><a href="#">HOME05</a></li>
            </ul>
        </li>
        <li class="depth1">
            <a href="#">NEWS</a>
            <ul class="depth2">
                <li><a href="#">NEWS01</a></li>
                <li><a href="#">NEWS02</a></li>
                <li><a href="#">NEWS03</a></li>
                <li><a href="#">NEWS04</a></li>
                <li><a href="#">NEWS05</a></li>
            </ul>
        </li>
        <li class="depth1">
             <a href="#">PROJECTS</a>
             <ul class="depth2">
                <li><a href="#">PROJECTS01</a></li>
                <li><a href="#">PROJECTS02</a></li>
                <li><a href="#">PROJECTS03</a></li>
                <li><a href="#">PROJECTS04</a></li>
                <li><a href="#">PROJECTS05</a></li>
             </ul>
        </li>
        <li class="depth1">
            <a href="#">BLOG</a>
            <ul class="depth2">
                <li><a href="#">BLOG01</a></li>
                <li><a href="#">BLOG02</a></li>
                <li><a href="#">BLOG03</a></li>
                <li><a href="#">BLOG04</a></li>
                <li><a href="#">BLOG05</a></li>
             </ul>
        </li>
        <li class="depth1">
            <a href="#">CHAT</a>
            <ul class="depth2">
                <li><a href="#">CHAT01</a></li>
                <li><a href="#">CHAT02</a></li>
                <li><a href="#">CHAT03</a></li>
                <li><a href="#">CHAT04</a></li>
                <li><a href="#">CHAT05</a></li>
            </ul>
        </li>
        <li class="depth1">
            <a href="#">ABOUTUS</a>
            <ul class="depth2">
                <li><a href="#">ABOUTUS01</a></li>
                <li><a href="#">ABOUTUS02</a></li>
                <li><a href="#">ABOUTUS03</a></li>
                <li><a href="#">ABOUTUS04</a></li>
                <li><a href="#">ABOUTUS05</a></li>
            </ul>
        </li>
        <li class="depth1">
            <a href="#">CONTACT</a>
            <ul class="depth2">
                <li><a href="#">CONTACT01</a></li>
                <li><a href="#">CONTACT02</a></li>
                <li><a href="#">CONTACT03</a></li>
                <li><a href="#">CONTACT04</a></li>
                <li><a href="#">CONTACT05</a></li>
            </ul>
        </li>
    </ul>
</body>
</html>
 
2 실행화면



Page 16:
*기본 구성
-글자에 position:relative 주기
-a::after{positon:absolute;}을 통해 따라가게 만들고 처음 width를 0으로 설정
-hover됐을시 after에 transition되어 width가 점차 자연스럽게 커지게 만들기
 
CODE
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        ul{width: 500px; margin:50px auto 0;list-style: none;}
        ul>li{float: left;width: 100px;}
        ul>li>a{text-decoration: none;color:inherit;
        display: block; height: 40px;line-height: 40px; text-align: center;position: relative;}
        ul>li>a::after{content:''; display: block;width: 0px; height: 2px;background:red;position: absolute;left:50%; top:45px; transform:translateX(-50%);}/*밑줄만들기*/
        ul>li:hover>a::after{width: 100px;transition: width 0.45s;}
    </style>
</head>
<body>
    <ul>
        <li><a href="#">기관</a></li>
        <li><a href="#">사업</a></li>
        <li><a href="#">후원</a></li>
        <li><a href="#">참여</a></li>
        <li><a href="#">소식</a></li>
    </ul>
</body>
</html>
 
실행화면



Page 17:
*이용한 사이트

http://maschek.hu/imagemap/imgmap/ 

 

maschek.hu - Online Image Map Editor
 
maschek.hu


 
*기본구성
-이미지를 삽입한다
-사이트에서 이미지파일을 선택하여 업로드 한 후, 특정영역을 누르고 좌표가 뜬 아래의 코드를 복사하고 코드에 붙여넣는다.(불필요한 부분은 삭제하기)
 
CODE
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <img src="coffee.jpg" alt="coffee" usemap="#map1">
    <map name="map1">
        <area shape="rect" alt="" title="" coords="228,62,287,122" href="https://zindex.tistory.com/" target="" />
    </map>
</body>
</html>
 
참고 화면




Page 18:
*참고 사이트
http://www.spritecow.com/

 

Sprite Cow - Generate CSS for sprite sheets
Sorry, it isn't working out between us It's not you, I just can't get along with your browser. Maybe if things change in the future... maybe if you bring Chrome, Firefox, Opera or even IE10 to the party... not promising anything, but give me a call.
www.spritecow.com


 
*이용 방법
-사이트에 들어가 'open image'를 누른다.
-해당 영역을 클릭하면 아래에 좌표가 뜨는 것을 복사하고 css에 붙여넣는다.
 
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        div.sprite{
        background: url('img/sprite.png') no-repeat 0 -304px;
        width: 218px;
        height: 72px;
        }
    </style>
</head>
<body>
    <div class="sprite"></div>
</body>
</html>
 
* 배경이미지 크기 조절하고 싶을때 (background, background-size, width, height 재설정)
 
footer .seller-service-btn::after{
    content:''; display: block;
    background: url('../img/sprite__common.png') no-repeat -343.5px -117.5px;
    /* background,width,height는 http://www.spritecow.com/에 이미지파일올리고 위치좌표구한것 */
    background-size: 400px auto;/*이미지사이즈800절반(속성보고 따로 추가) 400하고 
    위에 background위치랑 width,height반으로 나눔*/
	width: 9.5px;
	height: 5px;
    position: absolute;
    right: 8px; top:50%; transform: translateY(-50%);
    }
 

Page 19:
-id
-password
-file
-email
-text
-radio(1개 선택 박스, 원모양)
-checkbox(여러개 체크박스, 네모모양)
-수량선택, 분류선택
-submit 제출, reset 취소, button
-textarea(여러줄 입력칸)
 
CODE
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        #userId{width: 150px; height: 50px;}
        fieldset{border: 1px solid #ccc;}
    </style>
</head>
<body><!-- action:sumit같은거 제출할때 정보 넘어가도록 만듬.(밑에껀 예시로 그냥씀)-->
    <form name="frm1" action="ex.php">
        <fieldset>
            <legend>회원가입정보</legend>
            <ul>
                <li>
                   <label for="userId">아이디</label> <input type="text" id="userId" placeholder="아이디는 이메일형식입니다." maxlength="5" >
                </li><!--label처리를 해야 접근성에 통과 꼭 쓰기/name은 생략가능해서안씀 /placeholder:입력전써져있는글씨
                maxlength:입력칸글자수설정-->
                <li>
                    <label for="userPw">비밀번호</label>
                    <input type="password" id="userPw" maxlength="7">
                </li>
                <li>
                    <input type="file">
                </li>
                <li>
                    <label for="userMail">이메일</label>
                    <input type="email" id="userMail" required>
                    <input type="text" id="no" readonly placeholder="읽기만됨">
                    <!--no 바로위꺼 대충보려고만든거라형식엔안맞음-->
                </li>
                <!--  required:필수제출설정,  readonly:읽기 전용칸-->
            </ul>
        </fieldset><!--fieldset:비슷한 콘텐츠끼리 묶어주는거,필수x 있어도 없어도 됨 -->

        <fieldset>
            <legend>신청과목</legend><!-- 동그라미체크박스 1개선택-->
            <input type="radio" name="fubject" id="math" value="math"><label for="math">수학</label>
            <input type="radio" name="fubject" id="eng" value="eng"><label for="eng">영어</label>
            <input type="radio" name="fubject" id="ko" value="ko"><label for="ko">국어</label>
        </fieldset>
        <fieldset><!-- 네모체크박스 여러개선택 -->
            <legend>관심분야</legend><!--id아이디,비밀번호같은건 value값이 자동넘어가는데 체크박스는 안넘어가서 꼭 따로 입력-->
            <input type="checkbox" id="movie" value="movie" checked><label for="movie">영화</label>
            <input type="checkbox" id="music" value="music"><label for="music">음악</label>
            <input type="checkbox" id="book" value="book"><label for="book">독서</label>
            <input type="checkbox" id="game" value="game"><label for="game">게임</label>
        </fieldset>
        <!--checked 미리체크되어있게설정-->

        <fieldset>
            <legend>선택</legend>
            <label for="sel1">수량선택</label><!--없애려면 label달고 display:none처리,그냥안쓰면유효성x -->
            <select name="" id="sel1">
                <option value="10">10개</option>
                <option value="20">20개</option>
                <option value="30">30개</option>
                <option value="40">40개</option>
                <option value="50">50개</option>
            </select>
            <select>
                <optgroup label="이과">
                    <option value="math">수학</option>
                    <option value="sien">과학</option>
                    <option value="bio">생물</option>
                </optgroup>
                <optgroup label="문과">
                    <option value="ko">국어</option>
                    <option value="eng">영어</option>
                    <option value="text">논술</option>
                </optgroup>
            </select>
        </fieldset>

        <input type="submit" value="제출하기">
        <input type="reset" value="취소하기">
        <input type="button" value="버튼">
        <button>버튼</button>
        <!-- button 디폴트는 submit -->
        <!-- 눌러서 펼쳐지는거 만들때 제출보단 버튼을 이용하는 경우 많음 -->
        <textarea></textarea><!--여러줄입력칸(주소같은..) -->
    </form>
</body>
</html>
 
 
실행 화면 ▼
 






Document


















회원가입정보


아이디 


비밀번호






이메일








신청과목
수학
영어
국어


관심분야
영화
음악
독서
게임



선택
수량선택

10개
20개
30개
40개
50개



수학
과학
생물


국어
영어
논술






버튼




참고) 특정 속성 선택한 호출방법, 아웃라인 선 안보이게 처리하는 방법
    header .search-box input[type='text']{border:none;width: 450px;height: 32px;outline:none;line-height: 32px;font-size: 14px;color: rgb(104, 92, 194);}
** text속성선택 호출 /outline:none;>>마우스포커스올려졌을때 선안보이게**
	













 

Page 20:
*자바스크립트를 실행하기위해 node.js를 깔아놓았음
 
*vs코드 console값을 찍기 위해 터미널에서 node js2.js를 계속 사용시 치기엔 불편해서 나온 플러그인이
"nodemon"
 
<설치방법>
1. vs코드 아래 터미널에 npm install -g nodemon 를 작성하면 설치됨(띄어쓰기 주의)
-npm패키지를 통해서 nodmon을 설치하겠다는 뜻인데 g를 붙이면 해당 폴더 뿐만아니라 다른 곳도 다 사용가능
(g안쓰면 해당 폴더에만 사용가능)
 
2. 터미널에 다시 nodemon js2.js치면 값이 아래에 뜬다.
 
3. ctrl+s 누를때마다 자동으로 콘솔값이 터미널에 뜬다.
 
4. 다음번 사용시, 폴더 선택 후 터미널에 nodemon js1.js 라고 쳐주면 사용 가능하다.

▼ 노드몬 설치된 화면


 
▼ 노드몬 실행 - 저장시 터미널 아래 자동뜨는 값


 
▼ 설치된 후 사용할 때 터미널에 친 후 시작화면


 
<참고>
-터미널클릭후 ctrl+c >노드몬에서 나가짐 -디렉토리 이동 작성법 (왼쪽 파일 오픈해도 됨) D:\file1\html\11> cd ../  위로 올라가짐D:\file1\html>cd 11  내려가려는 파일명D:\file1\html\11> ../../ 두단계 위

Page 21:
text-align : 텍스트를 수평으로 정렬할때 사용
 
속성값
text-align:left; 왼쪽 정렬
text-align:right; 오른쪽 정렬
text-align:center; 가운데 정렬
text-align:justify; 왼쪽에서 오른쪽에 맞추어 양쪽 정렬
 
주의사항
1. block 요소에만 text-align 속성 적용 가능2. block 요소 안에 있는 inline 요소(text, img...)만 정렬되는 것이 가능함.
 

Page 22:
절대값:고정된 값 
-px
 
상대값: 고정되지 않고 유동적으로 바뀌는 값
: %, em, rem, vw, vh, vmin, vmax
 
1. px
px(픽셀)단위는 화소 1개의 크기를 의미.
고정된 단위에 사용
 
2. %
-백분율 단위의 상대단위
ex)14px *200%(2)=28px
 
-해상도에 따른 %크기 구하기
>1920안에 1280이너로 있으면 해상도가 1280인거나 마찬가지로 봄
>만약네모width가 221px이면 221/1280= 0.17265625 0.17265625*100=17.265625 
 
3. em
-배수 단위의 상대 단위
-상위요소(상속이나 기본값)에 따라 1em이 지정
-M사이즈랑 같은 사이즈/ equal to M약자 -font-size가 30이면 30em -상위요소 폰트사이즈를 따라 1em됨 (상위16px=1em) -요소 사이즈로 잘 사용하진 않음 , 너무 복잡해져서(font-size. padding, margin을 더 많이 사용)
 
3. rem
-root(html) 최상위 요소의 사이즈를 기준으로 잡는다.
-html 지정한 px에 따라 1em결정 -equal to root M의 약자 rem  
3. vw
-기기의 보이는 화면 width사이즈가 기준  -모바일 반응형 많이 사용ex)100vw >전체넓이
 
-vw계산법
ex) height: 10.277vw; 
/* 37px을 vw로 변환 >'37px(적용시키려는요소)/360px(기기브라우저화면) *100' */
 
3. vh
-기기의 보이는 화면 height 사이즈가 기준 
-100vh >전체높이
 
3. vmin
-뷰포트에서 작은쪽이 기준 (가로가 작고 세로가 크면 가로기준)
 
3. vmax
-뷰포트에서 큰쪽이 기준(가로가 크고 세로가 작으면 가로 기준)
 
+calc 계산법
특정부분 빼고 나머지에서 %구하기

 width:calc(50% - 4.5px);
>가운데 영역 4.5px씩 고정한거 뺄거니까 calc써서 50% 
 

 

Page 23:
*max-width와 min-width -max-width: 최대값, 이하/큰 값부터 내려오게 적기-min-width: 최소값, 이상/작은 값부터 올라가게 적기
 
<max-width>
@media screen and (max-width:1200px){
  body{background-color: red;}
}/* screen :기기/ 최대넓이가 1200px /1200이하까지적용/ and양 옆 꼭 띄어주기*/
@media screen and (max-width:980px) {
 body{background-color: green;}
 }
@media screen and (max-width:600px) {
 body{background-color: green;}
}
 
<min-width>
@media screen and (min-width:600px){
 }/* screen :기기/min 600부터 980보다 작은거 (600부터 979까지)*/
@media screen and (min-width:980px) {
 }
@media screen and (min-width:1200px) {
 }
 
<구간적용 설정>
 @media screen and (max-width:1200px) and (min-width:600px){
 }
-쓴 순서에 상관없이 구간에 적용됨
 
 
 

@media screen only screen{}
@media screen not screen{}


Page 24:
 Grid  
-flex처럼 레이아웃에 유용하게 쓰임.
-flex는 1차원(가로 or 세로)적인 것에 반면, grid는 2차원 두방향(가로, 세로)이 가능하다.
-때문에 복잡한 레이아웃 표현이 가능하다.
 

Container (부모요소) 속성
display : grid || inline-gridgrid-template-columns          :세로줄나누기  grid-template-rows               :가로줄나누기gridgrid-column-gap(column-gap) :세로 간격 설정grid-row-gap(row-gap)           :가로 간격 설정grid-gap                              :세로 가로 간격 축약justify-items                         :가로정렬align-items                          :세로정렬justify-content                      :아이템 그룹 가로 정렬align-content                       :아이템 그룹 세로 정렬
 



Item (자식요소) 속성
justify-self              :개별 아이템 가로 정렬align-self               :개별 아이템  세로 정렬gird-column-startgird-column-endgird-columngrid-row-startgrid-row-endgrid-rowgrid-areorder                    :배치순서



 
 
+repeat 함수 (반복횟수, 반복값)
grid-template-columns: repeat(4, 1fr);
/* grid-template-columns: 1fr 1fr 1fr 1fr */
 

[grid 통합해서 쓰기]grid-area : 시작가로/시작세로/ 끝가로/끝세로 -ex1) grid-area:1/2/5/6;-span활용한 ex2) grid-area: 2/1/ span 2 /span 3; >>시작점 가로와 세로, span각 설정
 
예제1
<div class="container container4">
   <div>1</div>
   <div>2</div>
   <div>3</div>
   <div>4</div>
 </div>
 
 <style>
 .container4{
   width: 400px;
   height: 400px;
   display: grid;
   background-color: rgb(185, 181, 175);
 }
 .container4>div{
   background-color: beige;
   margin: 10px;
   text-align: center;
   border-radius: 5px;
 }
 .container4>div:nth-child(1){
   grid-area: 1/1/2/2;
 }
 .container4>div:nth-child(2){
    grid-area: 1/2/2/3;
 }
 .container4>div:nth-child(3){
    grid-area: 2/1/3/2;
 }
 .container4>div:nth-child(4){
    grid-area: 2/2/3/3;
 }
/* 시작은 모서리왼쪽위,끝은 오른쪽모서리아래 */
 </style>
 

1
2
3
4



예제2
<div class="container2">
        <div>1</div>
        <div>2</div>
        <div>3</div>
        <div>4</div>
        <div>5</div>
        <div>6</div>
        <div>7</div>
        <div class="select">8</div>
        <div>9</div>
        <div>10</div>
        <div>11</div>
        <div>12</div>
        <div>13</div>
        <div>14</div>
        <div>15</div>  
</div>
    
<style>
.container2{
  border: 5px solid #000;
  background-color: rgb(216, 114, 114);
  height: 300px;
  display: grid;
  grid-gap:10px;
  grid-template-columns: auto auto auto auto auto auto;
 }
.container2>div{
   background-color: #fff;
   text-align: center;
 }
 .container2>div.select{
 /*  grid-column: 2/ span 4; */
 /*  grid-row: 1 /span 4; */
   background-color: rgb(193, 203, 222);          
 /* grid 통합해서 쓰기 */
 /* grid-area:시작가로/시작세로/ 끝가로/끝세로 */
 grid-area:1/2/5/6;
}
</style>
 

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15



